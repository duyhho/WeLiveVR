//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Xarm
{
    [Serializable]
    public class SetModbusTimeoutRequest : Message
    {
        public const string k_RosMessageName = "xarm_msgs/SetModbusTimeout";
        public override string RosMessageName => k_RosMessageName;

        //  configure the timeout parameter in modbus communication, in milliseconds
        public int timeout_ms;
        //  whether the set timeout is the timeout of transparent transmission
        public bool is_transparent_transmission;

        public SetModbusTimeoutRequest()
        {
            this.timeout_ms = 0;
            this.is_transparent_transmission = false;
        }

        public SetModbusTimeoutRequest(int timeout_ms, bool is_transparent_transmission)
        {
            this.timeout_ms = timeout_ms;
            this.is_transparent_transmission = is_transparent_transmission;
        }

        public static SetModbusTimeoutRequest Deserialize(MessageDeserializer deserializer) => new SetModbusTimeoutRequest(deserializer);

        private SetModbusTimeoutRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.timeout_ms);
            deserializer.Read(out this.is_transparent_transmission);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.timeout_ms);
            serializer.Write(this.is_transparent_transmission);
        }

        public override string ToString()
        {
            return "SetModbusTimeoutRequest: " +
            "\ntimeout_ms: " + timeout_ms.ToString() +
            "\nis_transparent_transmission: " + is_transparent_transmission.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
